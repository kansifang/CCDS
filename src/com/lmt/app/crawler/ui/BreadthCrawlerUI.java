/*
 * Copyright (C) 2014 hu
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 2
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA  02111-1307, USA.
 */
package com.lmt.app.crawler.ui;

import java.awt.EventQueue;
import java.io.File;

import javax.swing.GroupLayout.ParallelGroup;
import javax.swing.GroupLayout.SequentialGroup;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;

import org.apache.log4j.AppenderSkeleton;
import org.apache.log4j.PatternLayout;
import org.apache.log4j.spi.LoggingEvent;

import com.lmt.app.crawler.BreadthCrawler;
import com.lmt.app.crawler.IfengCrawler;
import com.lmt.app.crawler.util.LogUtils;

/**
 *
 * @author hu
 */
public class BreadthCrawlerUI extends javax.swing.JFrame {
    /**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	/**
     * Creates new form BasicCrawlerUI
     */
    BreadthCrawler crawler = new IfengCrawler();
    int threads = 10;
    int depth = 5;
    public String crawlPath="D:\\crawl";
    public class TextAreaAppender extends AppenderSkeleton implements DocumentListener{
        public PatternLayout layout;
        public TextAreaAppender(){
            logArea.getDocument().addDocumentListener(this);
            layout=new PatternLayout("%d{yyyy-MM-dd HH:mm:ss} %p %c %x - %m%n ");
        }
        @Override
        protected void append(final LoggingEvent le) {
             EventQueue.invokeLater(new Runnable(){
                    @Override
                    public void run() {
                        logArea.append(layout.format(le));
                    }
                    
                });
        }
        @Override
        public void close() {
        }

        @Override
        public boolean requiresLayout() {
            return false;
        }

        @Override
        public void insertUpdate(DocumentEvent e) {
        }

        @Override
        public void removeUpdate(DocumentEvent e) {
        }

        @Override
        public void changedUpdate(DocumentEvent e) {
        }
        
    }
    public BreadthCrawlerUI() {
        initComponents();
        LogUtils.getLogger().removeAppender("default");
        LogUtils.getLogger().addAppender(new TextAreaAppender());
        /*
        LogUtils.handler=new Handler(){

            @Override
            public void handleMessage(Message msg) {
                super.handleMessage(msg); //To change body of generated methods, choose Tools | Templates.
                if(!msg.obj.getClass().isArray()){
                    return;
                }
                
                final String[] infos=(String[]) msg.obj;
                if(infos.length<3){
                    return;
                }
                EventQueue.invokeLater(new Runnable() {

                    @Override
                    public void run() {
                        tablemodel.addRow(new String[]{infos[0],infos[2]});
                   
                       // tb_status.scrollRectToVisible(tb_status.getCellRect(tb_status.getRowCount()-1,0,true));
                
                    }
                });
               
            }
        };*/
        txt_seed.setText("http://finance.ifeng.com/");
        txt_pregex.setText(".*finance.*");
        txt_nregex.setText(".*index.*");
        File f = new File(crawlPath+"/download");
        txt_path.setText(f.getAbsolutePath());
        
        txt_threads.setText(threads + "");
        txt_depth.setText(depth + "");
        String help = "1.种子\n"
                +"至少添加�?��种子（种子即爬虫的起始页面的网址)。\n"
                +"如果要爬去整个站点，可以用站点主页的网址作为种子。\n"
                + "例如爬取新华网，就也可以添加�?��种子：\n"
                +"    http://www.xinhuanet.com/\n\n"
                +"2.正则\n"
                + "正则起到约束爬取页面的URL的作用�?\n"
                +"至少添加�?��\"允许的正则\"\n\n"
                +"3.本地路径\n"
                +"本地路径制定爬取页面在本地的存放路径\n";

        output(help);
        //crawler.addRegex("http://.*xinhuanet.com/.*");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
    	jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        
        txt_seed = new javax.swing.JTextArea();//.JTextField();
        txt_seed.setRows(5);
        txt_pregex = new javax.swing.JTextArea();
        txt_pregex.setRows(5);
        txt_nregex = new javax.swing.JTextArea();
        txt_nregex.setRows(5);
        txt_path = new javax.swing.JTextField();
        txt_threads = new javax.swing.JTextField();
        txt_depth = new javax.swing.JTextField();
        
        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        //标题
        setTitle("基础爬虫");
        //要素题目标签
        //配置种子
        jLabel1.setText("种子:");
        //对URL的过滤Regex
        jLabel2.setText("允许的正�?");
        jLabel3.setText("本地路径:");
        jLabel4.setText("线程�?");

        jLabel5.setText("禁止的正�?可�?):");
        jLabel5.setToolTipText("");
        
        jLabel6.setText("深度:");

        txt_path.setText("download");
        txt_path.setToolTipText("");

        //初始化按钮并增加事件
        btn_addseed = new javax.swing.JButton();
        btn_addpregex = new javax.swing.JButton();
        btn_addnregex = new javax.swing.JButton();
        btn_start = new javax.swing.JButton();
        btn_stop = new javax.swing.JButton();
        btn_addseed.setText("添加");
        btn_addseed.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addseedActionPerformed(evt);
            }
        });

        btn_addpregex.setText("添加");
        btn_addpregex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addpregexActionPerformed(evt);
            }
        });
        btn_addnregex.setText("添加");
        btn_addnregex.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_addnregexActionPerformed(evt);
            }
        });
        btn_start.setText("�?��");
        btn_start.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_startActionPerformed(evt);
            }
        });
        btn_stop.setText("停止");
        btn_stop.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btn_stopActionPerformed(evt);
            }
        });
        //两个输出展示�?        
        jScrollPane2 = new javax.swing.JScrollPane();
        txt_output = new javax.swing.JTextArea();
        txt_output.setColumns(20);
        txt_output.setRows(5);
        jScrollPane2.setViewportView(txt_output);
        
        jScrollPane3 = new javax.swing.JScrollPane();
        logArea = new javax.swing.JTextArea();
        logArea.setColumns(20);
        logArea.setRows(5);
        jScrollPane3.setViewportView(logArea);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        //横轴
        ParallelGroup labelgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)//左对�?                .addComponent(jLabel1)
                .addComponent(jLabel2)
                .addComponent(jLabel3)
                .addComponent(jLabel4)
                .addComponent(jLabel5)
                .addComponent(jLabel6);
        ParallelGroup fieldgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                .addComponent(txt_nregex,javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addComponent(txt_threads)
                .addComponent(txt_pregex, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addComponent(txt_seed)
                .addComponent(txt_path, javax.swing.GroupLayout.DEFAULT_SIZE, 373, Short.MAX_VALUE)
                .addComponent(txt_depth);
        ParallelGroup rightBtnGroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                .addComponent(btn_addseed)
                .addComponent(btn_addpregex)
            	.addComponent(btn_addnregex);
        SequentialGroup labelFieldGroup=layout.createSequentialGroup()
                .addGroup(labelgroup)
                .addGap(5, 10, 15)
                .addGroup(fieldgroup)
                .addGroup(rightBtnGroup);
        SequentialGroup submitBtnGroupH=layout.createSequentialGroup()
                .addComponent(btn_start)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(btn_stop);
        layout.setHorizontalGroup(
            layout.createSequentialGroup()
            	.addGap(16, 26, 36)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.CENTER)
                            .addGroup(labelFieldGroup)
                            .addGroup(submitBtnGroupH))
                        .addGap(10, 20, 71)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 414, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addComponent(jScrollPane3))
                .addContainerGap(26, Short.MAX_VALUE)
        );
        //竖轴
        ParallelGroup seedgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(txt_seed, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addComponent(btn_addseed)
                .addComponent(jLabel1);
        ParallelGroup pregexgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel2)
                .addComponent(btn_addpregex)
                .addComponent(txt_pregex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
        ParallelGroup nregexgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel5)
                .addComponent(btn_addnregex)
                .addComponent(txt_nregex, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
        ParallelGroup pathgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel3)
                .addComponent(txt_path, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
        ParallelGroup threadsgroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel4)
                .addComponent(txt_threads, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
        ParallelGroup depthGroup=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(jLabel6)
                .addComponent(txt_depth, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE);
        ParallelGroup submitBtnGroupV=layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(btn_start)
                .addComponent(btn_stop);
        layout.setVerticalGroup(
            layout.createSequentialGroup()
                .addGap(14, 14, 14)//离顶部距�?                
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(seedgroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(pregexgroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(nregexgroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(pathgroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(threadsgroup)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(depthGroup)
                        .addGap(5, 10, 15)
                        .addGroup(submitBtnGroupV))
                    .addComponent(jScrollPane2))
                .addGap(10, 10, 20)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        jLabel2.getAccessibleContext().setAccessibleName("允许的正则表达式");
        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btn_addseedActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addseedActionPerformed
        // TODO add your handling code here:
        String seed = txt_seed.getText();
        output("添加种子:" + seed);
        crawler.addSeeds(seed,"\\s+");
  	  	//matcher.appendTail(sb);
    }//GEN-LAST:event_btn_addseedActionPerformed
    private void btn_addpregexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addpregexActionPerformed
        // TODO add your handling code here:
        String regex = txt_pregex.getText();
        output("添加允许正则:" + regex);
        crawler.addPRegexs(regex,"\\s+");
    }//GEN-LAST:event_btn_addpregexActionPerformed
    private void btn_addnregexActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_addnregexActionPerformed
        // TODO add your handling code here:
        String regex = txt_nregex.getText();
        output("添加禁止正则:" + regex);
        crawler.addNRegexs(regex,"\\s+");
    }//GEN-LAST:event_btn_addnregexActionPerformed

    private void output(String line) {
        txt_output.append(line + "\n");
    }
    private void btn_startActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_startActionPerformed
        // TODO add your handling code here:
        final String pageSavePath = txt_path.getText().trim();
        Thread crawlthread = new Thread() {
            @Override
            public void run(){
                crawler.setPageSavePath(pageSavePath);
                crawler.setResumable(false);
                crawler.setCrawlPath(crawlPath);
                try {
                    threads = Integer.valueOf(txt_threads.getText());
                    crawler.setThreads(threads);
                    depth = Integer.valueOf(txt_depth.getText());
                    crawler.start(depth);
                } catch (Exception e){
                    e.printStackTrace();
                }
            }
        };
        //启动线程�?��爬行
        crawlthread.start();
        btn_start.setEnabled(false);
        output("�?��爬取，请前往" + pageSavePath + "文件夹查看爬取文�?不要关闭此窗口！");
    }//GEN-LAST:event_btn_startActionPerformed
    private void btn_stopActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btn_stopActionPerformed
        // TODO add your handling code here:
        btn_start.setEnabled(true);
        try{
            crawler.stop();
            output("停止");
        }catch(Exception ex){
            ex.printStackTrace();
        }
    }//GEN-LAST:event_btn_stopActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(BreadthCrawlerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(BreadthCrawlerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(BreadthCrawlerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(BreadthCrawlerUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new BreadthCrawlerUI().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btn_addnregex;
    private javax.swing.JButton btn_addpregex;
    private javax.swing.JButton btn_addseed;
    private javax.swing.JButton btn_start;
    private javax.swing.JButton btn_stop;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea logArea;
    private javax.swing.JTextField txt_depth;
    private javax.swing.JTextArea txt_output;
    private javax.swing.JTextField txt_path;
    private javax.swing.JTextArea txt_seed;
    private javax.swing.JTextArea txt_pregex;
    private javax.swing.JTextArea txt_nregex;
    private javax.swing.JTextField txt_threads;
    // End of variables declaration//GEN-END:variables
}
